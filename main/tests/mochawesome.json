{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-03T21:38:08.995Z",
    "end": "2024-08-03T21:38:09.124Z",
    "duration": 129,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ac7bf0b3-c859-4f05-98bc-48546914b83f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "54384ddb-b8f5-443b-9959-70c8544bbf12",
          "title": "fhem-log2db",
          "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/index.ts",
          "file": "/test/lib/index.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "config",
              "fullTitle": "fhem-log2db config",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('config', []);",
              "err": {},
              "uuid": "528f4ad1-edea-40a2-b2a6-72fb13f740e5",
              "parentUUID": "54384ddb-b8f5-443b-9959-70c8544bbf12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sync",
              "fullTitle": "fhem-log2db sync",
              "timedOut": false,
              "duration": 46,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('sync', []);",
              "err": {},
              "uuid": "ae8fd954-3c53-4545-8f98-36e267816ec7",
              "parentUUID": "54384ddb-b8f5-443b-9959-70c8544bbf12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clean",
              "fullTitle": "fhem-log2db clean",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('clean', []);",
              "err": {},
              "uuid": "cf92797d-3af7-436a-b5bc-e5fa8dfb8808",
              "parentUUID": "54384ddb-b8f5-443b-9959-70c8544bbf12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cron",
              "fullTitle": "fhem-log2db cron",
              "timedOut": false,
              "duration": 30,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('cron', []);",
              "err": {},
              "uuid": "35da20c6-2f70-4085-a6dc-57ef440eb111",
              "parentUUID": "54384ddb-b8f5-443b-9959-70c8544bbf12",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "default",
              "fullTitle": "fhem-log2db default",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('-', []);",
              "err": {},
              "uuid": "ada2fa8a-5ad4-49cc-a01c-6b5cf69d436a",
              "parentUUID": "54384ddb-b8f5-443b-9959-70c8544bbf12",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "4a80bc25-1717-4f56-9a30-0d6866c4f274",
              "title": "isRunning()",
              "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/index.ts",
              "file": "/test/lib/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with existing pids",
                  "fullTitle": "fhem-log2db isRunning() should work with existing pids",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.equal(isRunning(process.pid), true);",
                  "err": {},
                  "uuid": "998d9eb2-bf47-4528-be61-deb56dd658f5",
                  "parentUUID": "4a80bc25-1717-4f56-9a30-0d6866c4f274",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with non existing pids",
                  "fullTitle": "fhem-log2db isRunning() should work with non existing pids",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.equal(isRunning(10000), false);",
                  "err": {},
                  "uuid": "d417f2fd-1b5f-4372-b718-f7485a8b8539",
                  "parentUUID": "4a80bc25-1717-4f56-9a30-0d6866c4f274",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "998d9eb2-bf47-4528-be61-deb56dd658f5",
                "d417f2fd-1b5f-4372-b718-f7485a8b8539"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [
            "528f4ad1-edea-40a2-b2a6-72fb13f740e5",
            "ae8fd954-3c53-4545-8f98-36e267816ec7",
            "cf92797d-3af7-436a-b5bc-e5fa8dfb8808",
            "35da20c6-2f70-4085-a6dc-57ef440eb111",
            "ada2fa8a-5ad4-49cc-a01c-6b5cf69d436a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 121,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "a0f4265b-0244-4a9c-949e-b6c7d84e86ea",
          "title": "parseLine",
          "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/line-parser.ts",
          "file": "/test/lib/line-parser.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "parseLine should work",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 battery: 100');\nassert.deepStrictEqual(l, {\n    timestamp: new Date('2022-01-01T02:30:41'),\n    device: 'ZWave_SENSOR_MULTILEVEL_3',\n    event: 'battery: 100',\n    reading: 'battery',\n    value: '100',\n    unit: null\n});",
              "err": {},
              "uuid": "49820504-f074-4e1a-99cb-0589c3d83ea9",
              "parentUUID": "a0f4265b-0244-4a9c-949e-b6c7d84e86ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle float units",
              "fullTitle": "parseLine should handle float units",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 battery: 100.0 %');\nassert.deepStrictEqual(l, {\n    timestamp: new Date('2022-01-01T02:30:41'),\n    device: 'ZWave_SENSOR_MULTILEVEL_3',\n    event: 'battery: 100.0 %',\n    reading: 'battery',\n    value: '100.0',\n    unit: '%'\n});",
              "err": {},
              "uuid": "6ec4ddac-4ce3-4471-a8f8-44fc709a35f7",
              "parentUUID": "a0f4265b-0244-4a9c-949e-b6c7d84e86ea",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle timestamps",
              "fullTitle": "parseLine should handle timestamps",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 time: 2022-1-23 16:29:1');\nassert.deepStrictEqual(l, {\n    timestamp: new Date('2022-01-01T02:30:41'),\n    device: 'ZWave_SENSOR_MULTILEVEL_3',\n    event: 'time: 2022-1-23 16:29:1',\n    reading: 'time',\n    value: '2022-1-23 16:29:1',\n    unit: null\n});",
              "err": {},
              "uuid": "b005940b-3266-4e66-afb9-ffa6d544ea1d",
              "parentUUID": "a0f4265b-0244-4a9c-949e-b6c7d84e86ea",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "49820504-f074-4e1a-99cb-0589c3d83ea9",
            "6ec4ddac-4ce3-4471-a8f8-44fc709a35f7",
            "b005940b-3266-4e66-afb9-ffa6d544ea1d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}