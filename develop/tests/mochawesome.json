{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2024-07-30T20:01:52.545Z",
    "end": "2024-07-30T20:01:52.670Z",
    "duration": 125,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "12813e93-5ad8-4515-8a91-a3d5fc019b8e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d578aec7-accb-49ca-9494-4fbb36863038",
          "title": "fhem-log2db",
          "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/index.ts",
          "file": "/test/lib/index.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "config",
              "fullTitle": "fhem-log2db config",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('config', []);",
              "err": {},
              "uuid": "e8ac5f9c-292e-46b8-b04d-6bfbe44fc872",
              "parentUUID": "d578aec7-accb-49ca-9494-4fbb36863038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sync",
              "fullTitle": "fhem-log2db sync",
              "timedOut": false,
              "duration": 44,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('sync', []);",
              "err": {},
              "uuid": "42181efb-089d-43c7-9239-76976c37a14d",
              "parentUUID": "d578aec7-accb-49ca-9494-4fbb36863038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clean",
              "fullTitle": "fhem-log2db clean",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('clean', []);",
              "err": {},
              "uuid": "faac2cac-a220-471f-b62b-aea45a1f84d3",
              "parentUUID": "d578aec7-accb-49ca-9494-4fbb36863038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cron",
              "fullTitle": "fhem-log2db cron",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('cron', []);",
              "err": {},
              "uuid": "21d5f971-ccfd-4861-a29f-7b701db18129",
              "parentUUID": "d578aec7-accb-49ca-9494-4fbb36863038",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "default",
              "fullTitle": "fhem-log2db default",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('-', []);",
              "err": {},
              "uuid": "9f107d96-1c54-432b-91ce-dc0b89c585e5",
              "parentUUID": "d578aec7-accb-49ca-9494-4fbb36863038",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "6bb06988-aa32-496c-bfb0-20303b1ba061",
              "title": "isRunning()",
              "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/index.ts",
              "file": "/test/lib/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with existing pids",
                  "fullTitle": "fhem-log2db isRunning() should work with existing pids",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.equal(isRunning(process.pid), true);",
                  "err": {},
                  "uuid": "ac2ee4ea-85ce-4f68-b06e-00d109c24566",
                  "parentUUID": "6bb06988-aa32-496c-bfb0-20303b1ba061",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with non existing pids",
                  "fullTitle": "fhem-log2db isRunning() should work with non existing pids",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.equal(isRunning(10000), false);",
                  "err": {},
                  "uuid": "7471cac5-b80b-4d94-ba6b-30933807fc51",
                  "parentUUID": "6bb06988-aa32-496c-bfb0-20303b1ba061",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "ac2ee4ea-85ce-4f68-b06e-00d109c24566",
                "7471cac5-b80b-4d94-ba6b-30933807fc51"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [
            "e8ac5f9c-292e-46b8-b04d-6bfbe44fc872",
            "42181efb-089d-43c7-9239-76976c37a14d",
            "faac2cac-a220-471f-b62b-aea45a1f84d3",
            "21d5f971-ccfd-4861-a29f-7b701db18129",
            "9f107d96-1c54-432b-91ce-dc0b89c585e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 119,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "61ceeb8c-1c91-4733-b3b5-4e4373493faa",
          "title": "parseLine",
          "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/line-parser.ts",
          "file": "/test/lib/line-parser.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "parseLine should work",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 battery: 100');\nassert.deepStrictEqual(l, {\n    timestamp: new Date('2022-01-01T02:30:41'),\n    device: 'ZWave_SENSOR_MULTILEVEL_3',\n    event: 'battery: 100',\n    reading: 'battery',\n    value: '100',\n    unit: null\n});",
              "err": {},
              "uuid": "93a17aca-3b9b-4b35-8658-37e35aaf8574",
              "parentUUID": "61ceeb8c-1c91-4733-b3b5-4e4373493faa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle float units",
              "fullTitle": "parseLine should handle float units",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 battery: 100.0 %');\nassert.deepStrictEqual(l, {\n    timestamp: new Date('2022-01-01T02:30:41'),\n    device: 'ZWave_SENSOR_MULTILEVEL_3',\n    event: 'battery: 100.0 %',\n    reading: 'battery',\n    value: '100.0',\n    unit: '%'\n});",
              "err": {},
              "uuid": "0047c19d-ac11-45c2-b49a-db1f07dcb89b",
              "parentUUID": "61ceeb8c-1c91-4733-b3b5-4e4373493faa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle timestamps",
              "fullTitle": "parseLine should handle timestamps",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 time: 2022-1-23 16:29:1');\nassert.deepStrictEqual(l, {\n    timestamp: new Date('2022-01-01T02:30:41'),\n    device: 'ZWave_SENSOR_MULTILEVEL_3',\n    event: 'time: 2022-1-23 16:29:1',\n    reading: 'time',\n    value: '2022-1-23 16:29:1',\n    unit: null\n});",
              "err": {},
              "uuid": "9b9090ae-469e-4638-94f1-c9c26e95470d",
              "parentUUID": "61ceeb8c-1c91-4733-b3b5-4e4373493faa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "93a17aca-3b9b-4b35-8658-37e35aaf8574",
            "0047c19d-ac11-45c2-b49a-db1f07dcb89b",
            "9b9090ae-469e-4638-94f1-c9c26e95470d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}