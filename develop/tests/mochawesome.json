{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2024-08-03T21:31:45.410Z",
    "end": "2024-08-03T21:31:45.547Z",
    "duration": 137,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "8ecfbda5-13fa-44e5-a9ed-f1233fad91f7",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "cd37065f-b051-4ec6-bb47-20b459d15b77",
          "title": "fhem-log2db",
          "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/index.ts",
          "file": "/test/lib/index.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "config",
              "fullTitle": "fhem-log2db config",
              "timedOut": false,
              "duration": 18,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('config', []);",
              "err": {},
              "uuid": "930c5aeb-3496-4e4c-ba78-24c6be1151e9",
              "parentUUID": "cd37065f-b051-4ec6-bb47-20b459d15b77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sync",
              "fullTitle": "fhem-log2db sync",
              "timedOut": false,
              "duration": 56,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('sync', []);",
              "err": {},
              "uuid": "e8917c3e-0d5b-47c1-8089-4a1cf5b00094",
              "parentUUID": "cd37065f-b051-4ec6-bb47-20b459d15b77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clean",
              "fullTitle": "fhem-log2db clean",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('clean', []);",
              "err": {},
              "uuid": "bb34dc9a-e8a0-4440-b666-137881890f82",
              "parentUUID": "cd37065f-b051-4ec6-bb47-20b459d15b77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cron",
              "fullTitle": "fhem-log2db cron",
              "timedOut": false,
              "duration": 29,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('cron', []);",
              "err": {},
              "uuid": "05631295-a304-4c62-9658-449a66a14a36",
              "parentUUID": "cd37065f-b051-4ec6-bb47-20b459d15b77",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "default",
              "fullTitle": "fhem-log2db default",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await fhemLog2Db('-', []);",
              "err": {},
              "uuid": "c509183f-ce55-4886-af23-a2460e343b6f",
              "parentUUID": "cd37065f-b051-4ec6-bb47-20b459d15b77",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "d980a0b3-4625-4a61-8a05-76911e711646",
              "title": "isRunning()",
              "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/index.ts",
              "file": "/test/lib/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with existing pids",
                  "fullTitle": "fhem-log2db isRunning() should work with existing pids",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.equal(isRunning(process.pid), true);",
                  "err": {},
                  "uuid": "57c7ef59-6265-48f3-aa9a-0ba7c3743377",
                  "parentUUID": "d980a0b3-4625-4a61-8a05-76911e711646",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with non existing pids",
                  "fullTitle": "fhem-log2db isRunning() should work with non existing pids",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "assert.equal(isRunning(10000), false);",
                  "err": {},
                  "uuid": "8aac6613-954e-4977-be9f-47ee3446674f",
                  "parentUUID": "d980a0b3-4625-4a61-8a05-76911e711646",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "57c7ef59-6265-48f3-aa9a-0ba7c3743377",
                "8aac6613-954e-4977-be9f-47ee3446674f"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 0,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [
            "930c5aeb-3496-4e4c-ba78-24c6be1151e9",
            "e8917c3e-0d5b-47c1-8089-4a1cf5b00094",
            "bb34dc9a-e8a0-4440-b666-137881890f82",
            "05631295-a304-4c62-9658-449a66a14a36",
            "c509183f-ce55-4886-af23-a2460e343b6f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 131,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "cc704138-4108-4f19-908c-3e50f6068da7",
          "title": "parseLine",
          "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/line-parser.ts",
          "file": "/test/lib/line-parser.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "parseLine should work",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 battery: 100');\nassert.deepStrictEqual(l, {\n    timestamp: new Date('2022-01-01T02:30:41'),\n    device: 'ZWave_SENSOR_MULTILEVEL_3',\n    event: 'battery: 100',\n    reading: 'battery',\n    value: '100',\n    unit: null\n});",
              "err": {},
              "uuid": "b50a1e81-5fba-4f88-9712-d5e784b8c12c",
              "parentUUID": "cc704138-4108-4f19-908c-3e50f6068da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle float units",
              "fullTitle": "parseLine should handle float units",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 battery: 100.0 %');\nassert.deepStrictEqual(l, {\n    timestamp: new Date('2022-01-01T02:30:41'),\n    device: 'ZWave_SENSOR_MULTILEVEL_3',\n    event: 'battery: 100.0 %',\n    reading: 'battery',\n    value: '100.0',\n    unit: '%'\n});",
              "err": {},
              "uuid": "24b40dea-40ec-4a10-824b-8f72aa95c52b",
              "parentUUID": "cc704138-4108-4f19-908c-3e50f6068da7",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle timestamps",
              "fullTitle": "parseLine should handle timestamps",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 time: 2022-1-23 16:29:1');\nassert.deepStrictEqual(l, {\n    timestamp: new Date('2022-01-01T02:30:41'),\n    device: 'ZWave_SENSOR_MULTILEVEL_3',\n    event: 'time: 2022-1-23 16:29:1',\n    reading: 'time',\n    value: '2022-1-23 16:29:1',\n    unit: null\n});",
              "err": {},
              "uuid": "e77c926c-2518-45ad-aebd-40b2dd8a18f1",
              "parentUUID": "cc704138-4108-4f19-908c-3e50f6068da7",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b50a1e81-5fba-4f88-9712-d5e784b8c12c",
            "24b40dea-40ec-4a10-824b-8f72aa95c52b",
            "e77c926c-2518-45ad-aebd-40b2dd8a18f1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.7.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}