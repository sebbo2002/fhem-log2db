{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2024-01-23T10:33:01.425Z",
    "end": "2024-01-23T10:33:01.564Z",
    "duration": 139,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "0ab2aec6-e78d-43e4-be1e-e80ea872661b",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "364e7465-b5b2-4528-8598-339936c750e8",
          "title": "fhem-log2db",
          "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/index.ts",
          "file": "/test/lib/index.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "config",
              "fullTitle": "fhem-log2db config",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield fhemLog2Db('config', []);\n});",
              "err": {},
              "uuid": "aa4a9829-dd52-44e2-b11e-acdf7e79ad9b",
              "parentUUID": "364e7465-b5b2-4528-8598-339936c750e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sync",
              "fullTitle": "fhem-log2db sync",
              "timedOut": false,
              "duration": 49,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield fhemLog2Db('sync', []);\n});",
              "err": {},
              "uuid": "3807874c-c5b2-4791-97fa-ba3b01e62a37",
              "parentUUID": "364e7465-b5b2-4528-8598-339936c750e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clean",
              "fullTitle": "fhem-log2db clean",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield fhemLog2Db('clean', []);\n});",
              "err": {},
              "uuid": "4590ebcf-010f-4689-9179-a3089b7d98bd",
              "parentUUID": "364e7465-b5b2-4528-8598-339936c750e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cron",
              "fullTitle": "fhem-log2db cron",
              "timedOut": false,
              "duration": 35,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield fhemLog2Db('cron', []);\n});",
              "err": {},
              "uuid": "d02d4168-99d8-449f-9548-02d4b57487a6",
              "parentUUID": "364e7465-b5b2-4528-8598-339936c750e8",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "default",
              "fullTitle": "fhem-log2db default",
              "timedOut": false,
              "duration": 8,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield fhemLog2Db('-', []);\n});",
              "err": {},
              "uuid": "870cd35c-11d2-4163-83c2-c6ebaac57785",
              "parentUUID": "364e7465-b5b2-4528-8598-339936c750e8",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "cdfef406-a66a-4dde-8e11-0680dc50461a",
              "title": "isRunning()",
              "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/index.ts",
              "file": "/test/lib/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with existing pids",
                  "fullTitle": "fhem-log2db isRunning() should work with existing pids",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(this, void 0, void 0, function* () {\n    assert.equal(isRunning(process.pid), true);\n});",
                  "err": {},
                  "uuid": "a393c6b3-107c-4c91-a59f-e0d4adbb8517",
                  "parentUUID": "cdfef406-a66a-4dde-8e11-0680dc50461a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with non existing pids",
                  "fullTitle": "fhem-log2db isRunning() should work with non existing pids",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(this, void 0, void 0, function* () {\n    assert.equal(isRunning(10000), false);\n});",
                  "err": {},
                  "uuid": "e171e8a3-8f91-45a9-ae5f-dd2fc92aa7f4",
                  "parentUUID": "cdfef406-a66a-4dde-8e11-0680dc50461a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "a393c6b3-107c-4c91-a59f-e0d4adbb8517",
                "e171e8a3-8f91-45a9-ae5f-dd2fc92aa7f4"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [
            "aa4a9829-dd52-44e2-b11e-acdf7e79ad9b",
            "3807874c-c5b2-4791-97fa-ba3b01e62a37",
            "4590ebcf-010f-4689-9179-a3089b7d98bd",
            "d02d4168-99d8-449f-9548-02d4b57487a6",
            "870cd35c-11d2-4163-83c2-c6ebaac57785"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 130,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "abbc6b84-a46f-4672-9182-1ec844482d3b",
          "title": "parseLine",
          "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/line-parser.ts",
          "file": "/test/lib/line-parser.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "parseLine should work",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 battery: 100');\n    assert.deepStrictEqual(l, {\n        timestamp: new Date('2022-01-01T02:30:41'),\n        device: 'ZWave_SENSOR_MULTILEVEL_3',\n        event: 'battery: 100',\n        reading: 'battery',\n        value: '100',\n        unit: null\n    });\n});",
              "err": {},
              "uuid": "aa43d5c1-742a-419d-8aa0-a58acf8ebcb6",
              "parentUUID": "abbc6b84-a46f-4672-9182-1ec844482d3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle float units",
              "fullTitle": "parseLine should handle float units",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 battery: 100.0 %');\n    assert.deepStrictEqual(l, {\n        timestamp: new Date('2022-01-01T02:30:41'),\n        device: 'ZWave_SENSOR_MULTILEVEL_3',\n        event: 'battery: 100.0 %',\n        reading: 'battery',\n        value: '100.0',\n        unit: '%'\n    });\n});",
              "err": {},
              "uuid": "3e17b3ef-7809-4094-a46a-4ddeaaf27d67",
              "parentUUID": "abbc6b84-a46f-4672-9182-1ec844482d3b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle timestamps",
              "fullTitle": "parseLine should handle timestamps",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 time: 2022-1-23 16:29:1');\n    assert.deepStrictEqual(l, {\n        timestamp: new Date('2022-01-01T02:30:41'),\n        device: 'ZWave_SENSOR_MULTILEVEL_3',\n        event: 'time: 2022-1-23 16:29:1',\n        reading: 'time',\n        value: '2022-1-23 16:29:1',\n        unit: null\n    });\n});",
              "err": {},
              "uuid": "bc975cd9-8272-49ef-a05f-a814e257594a",
              "parentUUID": "abbc6b84-a46f-4672-9182-1ec844482d3b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "aa43d5c1-742a-419d-8aa0-a58acf8ebcb6",
            "3e17b3ef-7809-4094-a46a-4ddeaaf27d67",
            "bc975cd9-8272-49ef-a05f-a814e257594a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}