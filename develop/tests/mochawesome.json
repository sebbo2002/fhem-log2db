{
  "stats": {
    "suites": 3,
    "tests": 10,
    "passes": 10,
    "pending": 0,
    "failures": 0,
    "start": "2023-12-13T20:41:13.189Z",
    "end": "2023-12-13T20:41:13.324Z",
    "duration": 135,
    "testsRegistered": 10,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5cb2a137-bd0d-4d9b-9a08-ecc74f5a7b1e",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "22a2b6c9-88f2-4702-ba6a-76f97763a050",
          "title": "fhem-log2db",
          "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/index.ts",
          "file": "/test/lib/index.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "config",
              "fullTitle": "fhem-log2db config",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield fhemLog2Db('config', []);\n});",
              "err": {},
              "uuid": "b33c6bef-ce36-4b75-8d42-35f6e5da881e",
              "parentUUID": "22a2b6c9-88f2-4702-ba6a-76f97763a050",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "sync",
              "fullTitle": "fhem-log2db sync",
              "timedOut": false,
              "duration": 48,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield fhemLog2Db('sync', []);\n});",
              "err": {},
              "uuid": "753b0c54-b732-4273-ba65-7d8f84beb3d4",
              "parentUUID": "22a2b6c9-88f2-4702-ba6a-76f97763a050",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "clean",
              "fullTitle": "fhem-log2db clean",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield fhemLog2Db('clean', []);\n});",
              "err": {},
              "uuid": "bdaf1ac5-d85f-42ec-9d79-b344e62f0f86",
              "parentUUID": "22a2b6c9-88f2-4702-ba6a-76f97763a050",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cron",
              "fullTitle": "fhem-log2db cron",
              "timedOut": false,
              "duration": 31,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield fhemLog2Db('cron', []);\n});",
              "err": {},
              "uuid": "17144a92-49ab-4e62-a97c-7df054598d38",
              "parentUUID": "22a2b6c9-88f2-4702-ba6a-76f97763a050",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "default",
              "fullTitle": "fhem-log2db default",
              "timedOut": false,
              "duration": 9,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    yield fhemLog2Db('-', []);\n});",
              "err": {},
              "uuid": "46b108d1-6d25-4b4e-958c-bb34776bab5d",
              "parentUUID": "22a2b6c9-88f2-4702-ba6a-76f97763a050",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [
            {
              "uuid": "050c8d8a-16eb-4ca9-bf50-b0c5aa5e135a",
              "title": "isRunning()",
              "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/index.ts",
              "file": "/test/lib/index.ts",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "should work with existing pids",
                  "fullTitle": "fhem-log2db isRunning() should work with existing pids",
                  "timedOut": false,
                  "duration": 1,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(this, void 0, void 0, function* () {\n    assert.equal(isRunning(process.pid), true);\n});",
                  "err": {},
                  "uuid": "defd7ae5-67da-4a23-92a3-506b14b0a089",
                  "parentUUID": "050c8d8a-16eb-4ca9-bf50-b0c5aa5e135a",
                  "isHook": false,
                  "skipped": false
                },
                {
                  "title": "should work with non existing pids",
                  "fullTitle": "fhem-log2db isRunning() should work with non existing pids",
                  "timedOut": false,
                  "duration": 0,
                  "state": "passed",
                  "speed": "fast",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "return __awaiter(this, void 0, void 0, function* () {\n    assert.equal(isRunning(10000), false);\n});",
                  "err": {},
                  "uuid": "5de74d29-e648-460b-a065-87a9e6eb2cff",
                  "parentUUID": "050c8d8a-16eb-4ca9-bf50-b0c5aa5e135a",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "defd7ae5-67da-4a23-92a3-506b14b0a089",
                "5de74d29-e648-460b-a065-87a9e6eb2cff"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 1,
              "root": false,
              "rootEmpty": false,
              "_timeout": 30000
            }
          ],
          "passes": [
            "b33c6bef-ce36-4b75-8d42-35f6e5da881e",
            "753b0c54-b732-4273-ba65-7d8f84beb3d4",
            "bdaf1ac5-d85f-42ec-9d79-b344e62f0f86",
            "17144a92-49ab-4e62-a97c-7df054598d38",
            "46b108d1-6d25-4b4e-958c-bb34776bab5d"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 126,
          "root": false,
          "rootEmpty": false,
          "_timeout": 30000
        },
        {
          "uuid": "0833a16b-e536-49c9-9689-1c3693f35664",
          "title": "parseLine",
          "fullFile": "/home/runner/work/fhem-log2db/fhem-log2db/test/lib/line-parser.ts",
          "file": "/test/lib/line-parser.ts",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "should work",
              "fullTitle": "parseLine should work",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 battery: 100');\n    assert.deepStrictEqual(l, {\n        timestamp: new Date('2022-01-01T02:30:41'),\n        device: 'ZWave_SENSOR_MULTILEVEL_3',\n        event: 'battery: 100',\n        reading: 'battery',\n        value: '100',\n        unit: null\n    });\n});",
              "err": {},
              "uuid": "3abaf8f8-fee9-4de3-bffc-7b69c8300e7f",
              "parentUUID": "0833a16b-e536-49c9-9689-1c3693f35664",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle float units",
              "fullTitle": "parseLine should handle float units",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 battery: 100.0 %');\n    assert.deepStrictEqual(l, {\n        timestamp: new Date('2022-01-01T02:30:41'),\n        device: 'ZWave_SENSOR_MULTILEVEL_3',\n        event: 'battery: 100.0 %',\n        reading: 'battery',\n        value: '100.0',\n        unit: '%'\n    });\n});",
              "err": {},
              "uuid": "79126e8b-29a4-4477-aab3-8173987141f2",
              "parentUUID": "0833a16b-e536-49c9-9689-1c3693f35664",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should handle timestamps",
              "fullTitle": "parseLine should handle timestamps",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "return __awaiter(this, void 0, void 0, function* () {\n    const l = parseLine('2022-01-01_02:30:41 ZWave_SENSOR_MULTILEVEL_3 time: 2022-1-23 16:29:1');\n    assert.deepStrictEqual(l, {\n        timestamp: new Date('2022-01-01T02:30:41'),\n        device: 'ZWave_SENSOR_MULTILEVEL_3',\n        event: 'time: 2022-1-23 16:29:1',\n        reading: 'time',\n        value: '2022-1-23 16:29:1',\n        unit: null\n    });\n});",
              "err": {},
              "uuid": "0d909106-5340-4116-abea-d5523a1ad478",
              "parentUUID": "0833a16b-e536-49c9-9689-1c3693f35664",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3abaf8f8-fee9-4de3-bffc-7b69c8300e7f",
            "79126e8b-29a4-4477-aab3-8173987141f2",
            "0d909106-5340-4116-abea-d5523a1ad478"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 2,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}